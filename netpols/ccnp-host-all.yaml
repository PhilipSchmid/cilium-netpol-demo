apiVersion: "cilium.io/v2"
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: host-all
spec:
  description: Cilium host policy for all nodes
  nodeSelector: {}
  ingress:
  # System management: ALlow SSH access from jumphost
  - fromCIDR:
    - 10.1.101.110/32
    toPorts:
    - ports:
      - port: "22"
        protocol: TCP
  # System monitoring: Allow ping to hosts (also required by Cilium control plane agent ICMP health checks)
  - icmps:
    - fields:
      - type: 8
        family: IPv4
  # KAPI Control plane connectivity for Kubelet Pod log streaming
  - fromEntities:
    - kube-apiserver
    toPorts:
    - ports:
      - port: "10250"
        protocol: TCP
  # Cilium control plane agent HTTP health checks
  - fromEntities:
    - remote-node
    toPorts:
    - ports:
      - port: "4240"
        protocol: TCP
  # Data plane inter-node connectivity
  - fromEntities:
    - host
    - remote-node
    toPorts:
    - ports:
        # Cilium VXLAN
      - port: "8472"
        protocol: UDP
        # Cilium WireGuard
      - port: "51871"
        protocol: UDP
  # Cilium Hubble relay access to Cilium agent Hubble peers
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: kube-system
        k8s:app.kubernetes.io/name: hubble-relay
    toPorts:
    - ports:
      - port: "4244"
        protocol: TCP
  # Allow coredns to reach hosts (e.g. for dnsmasq)
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: kube-system
        k8s:k8s-app: kube-dns
  # Allow Prometheus to scrape metrics from hosts on various ports
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: monitoring
        k8s:app.kubernetes.io/name: prometheus
  # Allow Metrics-Server to reach Kubelet metrics
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: monitoring
        k8s:app.kubernetes.io/name: metrics-server
    toPorts:
    - ports:
      - port: "10250"
        protocol: TCP